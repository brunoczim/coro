var searchIndex = {};
searchIndex["corustine"] = {"doc":"Repository: https://github.com/brunoczim/corustine","items":[[0,"channel","corustine","This module supplies a channel trait and some implementations.",null,null],[3,"Cheue","corustine::channel","\"Channel Queue\" - An implementation of channel using queues.",null,null],[8,"Channel","","A generic declaration for channels.",null,null],[10,"send","","Just sends a value through the channel. Must always succeed.",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[10,"recv","","Receives a value. If there is nothing avaible in the channel, returns `None`.",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"cheue"}}],[11,"new","","Creates an empty channel.",1,{"inputs":[],"output":{"name":"self"}}],[11,"send","","",1,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"recv","","",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[0,"task","corustine","This module supplies the facilities for creating tasks.",null,null],[3,"CoTasking","corustine::task","Builds a Co-operative tasking with some given coroutines.",null,null],[4,"Pause","","Must be returned from a single call of `resume`.",null,null],[13,"Yield","","This means that the coroutine indeed paused. It contains the next function identification.",2,null],[13,"Done","","This means that the coroutine actually stopped. This will make all tasks stop. It contains a final value.",2,null],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"pause"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"pause"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"pause"}],"output":{"name":"bool"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","A fresh zeroed builder.",3,{"inputs":[],"output":{"name":"self"}}],[11,"task","","Adds a task with the given name and coroutine.",3,{"inputs":[{"name":"self"},{"name":"i"},{"name":"f"}],"output":{"name":"self"}}],[11,"run","","Runs starting from the given coroutine name and an initial message.",3,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"t"}}]],"paths":[[8,"Channel"],[3,"Cheue"],[4,"Pause"],[3,"CoTasking"]]};
initSearch(searchIndex);
